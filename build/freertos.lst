ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/freertos.c"
  20              		.section	.text.ExStartDriveTask,"ax",%progbits
  21              		.align	1
  22              		.global	ExStartDriveTask
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	ExStartDriveTask:
  28              	.LFB221:
  29              		.file 2 "Core/Src/driver.c"
   1:Core/Src/driver.c **** #include "FreeRTOS.h"
   2:Core/Src/driver.c **** #include "task.h"
   3:Core/Src/driver.c **** #include "main.h"
   4:Core/Src/driver.c **** #include "cmsis_os.h"
   5:Core/Src/driver.c **** 
   6:Core/Src/driver.c **** 
   7:Core/Src/driver.c **** extern void ExStartDriveTask(void const * argument)
   8:Core/Src/driver.c **** {
  30              		.loc 2 8 1 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              	.LVL0:
  36              		.loc 2 8 1 is_stmt 0 view .LVU1
  37 0000 08B5     		push	{r3, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 3, -8
  41              		.cfi_offset 14, -4
  42              	.LVL1:
  43              	.L2:
   9:Core/Src/driver.c ****   /* USER CODE BEGIN StartDriveTask */
  10:Core/Src/driver.c ****   /* Infinite loop */
  11:Core/Src/driver.c ****   for(;;)
  44              		.loc 2 11 3 is_stmt 1 discriminator 1 view .LVU2
  12:Core/Src/driver.c ****   {
  13:Core/Src/driver.c ****     osDelay(1000);
  45              		.loc 2 13 5 discriminator 1 view .LVU3
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s 			page 2


  46 0002 4FF47A70 		mov	r0, #1000
  47 0006 FFF7FEFF 		bl	osDelay
  48              	.LVL2:
  14:Core/Src/driver.c ****     HAL_GPIO_WritePin(LED_CTR_GPIO_Port, LED_CTR_Pin, GPIO_PIN_RESET);
  49              		.loc 2 14 5 discriminator 1 view .LVU4
  50 000a 0022     		movs	r2, #0
  51 000c 4FF40051 		mov	r1, #8192
  52 0010 0348     		ldr	r0, .L4
  53 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  54              	.LVL3:
  15:Core/Src/driver.c ****     osDelay(1000);
  55              		.loc 2 15 5 discriminator 1 view .LVU5
  56 0016 4FF47A70 		mov	r0, #1000
  57 001a FFF7FEFF 		bl	osDelay
  58              	.LVL4:
  11:Core/Src/driver.c ****   {
  59              		.loc 2 11 3 discriminator 1 view .LVU6
  60 001e F0E7     		b	.L2
  61              	.L5:
  62              		.align	2
  63              	.L4:
  64 0020 00080240 		.word	1073874944
  65              		.cfi_endproc
  66              	.LFE221:
  68              		.section	.text.StartDriveTask,"ax",%progbits
  69              		.align	1
  70              		.global	StartDriveTask
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	StartDriveTask:
  76              	.LVL5:
  77              	.LFB225:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s 			page 3


  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include "driver.c"
  29:Core/Src/freertos.c **** #include "comm.c"
  30:Core/Src/freertos.c **** /* USER CODE END Includes */
  31:Core/Src/freertos.c **** 
  32:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/freertos.c **** 
  35:Core/Src/freertos.c **** /* USER CODE END PTD */
  36:Core/Src/freertos.c **** 
  37:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* USER CODE END PD */
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* USER CODE END PM */
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* USER CODE END Variables */
  51:Core/Src/freertos.c **** osThreadId driveTaskHandle;
  52:Core/Src/freertos.c **** osThreadId commTaskHandle;
  53:Core/Src/freertos.c **** osSemaphoreId CommSemaphoreHandle;
  54:Core/Src/freertos.c **** 
  55:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  59:Core/Src/freertos.c **** 
  60:Core/Src/freertos.c **** void StartDriveTask(void const * argument);
  61:Core/Src/freertos.c **** void StartCommTask(void const * argument);
  62:Core/Src/freertos.c **** 
  63:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  64:Core/Src/freertos.c **** 
  65:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  66:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  67:Core/Src/freertos.c **** 
  68:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  69:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  70:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  71:Core/Src/freertos.c **** 
  72:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  73:Core/Src/freertos.c **** {
  74:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  75:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  76:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  77:Core/Src/freertos.c ****   /* place for user code */
  78:Core/Src/freertos.c **** }
  79:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  80:Core/Src/freertos.c **** 
  81:Core/Src/freertos.c **** /**
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s 			page 4


  82:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  83:Core/Src/freertos.c ****   * @param  None
  84:Core/Src/freertos.c ****   * @retval None
  85:Core/Src/freertos.c ****   */
  86:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  87:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c ****   /* USER CODE END Init */
  90:Core/Src/freertos.c **** 
  91:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  92:Core/Src/freertos.c ****   /* add mutexes, ... */
  93:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  94:Core/Src/freertos.c **** 
  95:Core/Src/freertos.c ****   /* Create the semaphores(s) */
  96:Core/Src/freertos.c ****   /* definition and creation of CommSemaphore */
  97:Core/Src/freertos.c ****   osSemaphoreDef(CommSemaphore);
  98:Core/Src/freertos.c ****   CommSemaphoreHandle = osSemaphoreCreate(osSemaphore(CommSemaphore), 1);
  99:Core/Src/freertos.c **** 
 100:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 101:Core/Src/freertos.c ****   /* add semaphores, ... */
 102:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 103:Core/Src/freertos.c **** 
 104:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 105:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 106:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 107:Core/Src/freertos.c **** 
 108:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 109:Core/Src/freertos.c ****   /* add queues, ... */
 110:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 111:Core/Src/freertos.c **** 
 112:Core/Src/freertos.c ****   /* Create the thread(s) */
 113:Core/Src/freertos.c ****   /* definition and creation of driveTask */
 114:Core/Src/freertos.c ****   osThreadDef(driveTask, StartDriveTask, osPriorityNormal, 0, 1024);
 115:Core/Src/freertos.c ****   driveTaskHandle = osThreadCreate(osThread(driveTask), NULL);
 116:Core/Src/freertos.c **** 
 117:Core/Src/freertos.c ****   /* definition and creation of commTask */
 118:Core/Src/freertos.c ****   osThreadDef(commTask, StartCommTask, osPriorityNormal, 0, 1024);
 119:Core/Src/freertos.c ****   commTaskHandle = osThreadCreate(osThread(commTask), NULL);
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 122:Core/Src/freertos.c ****   /* add threads, ... */
 123:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 124:Core/Src/freertos.c **** 
 125:Core/Src/freertos.c **** }
 126:Core/Src/freertos.c **** 
 127:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDriveTask */
 128:Core/Src/freertos.c **** /**
 129:Core/Src/freertos.c ****   * @brief  Function implementing the driveTask thread.
 130:Core/Src/freertos.c ****   * @param  argument: Not used
 131:Core/Src/freertos.c ****   * @retval None
 132:Core/Src/freertos.c ****   */
 133:Core/Src/freertos.c **** /* USER CODE END Header_StartDriveTask */
 134:Core/Src/freertos.c **** void StartDriveTask(void const * argument)
 135:Core/Src/freertos.c **** {
  78              		.loc 1 135 1 view -0
  79              		.cfi_startproc
  80              		@ Volatile: function does not return.
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s 			page 5


  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		.loc 1 135 1 is_stmt 0 view .LVU8
  84 0000 08B5     		push	{r3, lr}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 3, -8
  88              		.cfi_offset 14, -4
 136:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDriveTask */
 137:Core/Src/freertos.c ****   /* Infinite loop */
 138:Core/Src/freertos.c ****   ExStartDriveTask(argument);
  89              		.loc 1 138 3 is_stmt 1 view .LVU9
  90 0002 FFF7FEFF 		bl	ExStartDriveTask
  91              	.LVL6:
  92              		.loc 1 138 3 is_stmt 0 view .LVU10
  93              		.cfi_endproc
  94              	.LFE225:
  96              		.section	.text.ExStartCommTask,"ax",%progbits
  97              		.align	1
  98              		.global	ExStartCommTask
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 103              	ExStartCommTask:
 104              	.LFB222:
 105              		.file 3 "Core/Src/comm.c"
   1:Core/Src/comm.c **** #include "FreeRTOS.h"
   2:Core/Src/comm.c **** #include "task.h"
   3:Core/Src/comm.c **** #include "main.h"
   4:Core/Src/comm.c **** #include "cmsis_os.h"
   5:Core/Src/comm.c **** 
   6:Core/Src/comm.c **** 
   7:Core/Src/comm.c **** extern void ExStartCommTask(void const * argument){
 106              		.loc 3 7 51 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ Volatile: function does not return.
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL7:
 112              		.loc 3 7 51 is_stmt 0 view .LVU12
 113 0000 08B5     		push	{r3, lr}
 114              	.LCFI2:
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 3, -8
 117              		.cfi_offset 14, -4
 118              	.LVL8:
 119              	.L9:
   8:Core/Src/comm.c ****   for(;;){
 120              		.loc 3 8 3 is_stmt 1 discriminator 1 view .LVU13
   9:Core/Src/comm.c ****     HAL_GPIO_WritePin(LED_CTR_GPIO_Port, LED_CTR_Pin, GPIO_PIN_SET);
 121              		.loc 3 9 5 discriminator 1 view .LVU14
 122 0002 0122     		movs	r2, #1
 123 0004 4FF40051 		mov	r1, #8192
 124 0008 0348     		ldr	r0, .L11
 125 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 126              	.LVL9:
  10:Core/Src/comm.c ****     osDelay(2000);
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s 			page 6


 127              		.loc 3 10 5 discriminator 1 view .LVU15
 128 000e 4FF4FA60 		mov	r0, #2000
 129 0012 FFF7FEFF 		bl	osDelay
 130              	.LVL10:
   8:Core/Src/comm.c ****   for(;;){
 131              		.loc 3 8 3 discriminator 1 view .LVU16
 132 0016 F4E7     		b	.L9
 133              	.L12:
 134              		.align	2
 135              	.L11:
 136 0018 00080240 		.word	1073874944
 137              		.cfi_endproc
 138              	.LFE222:
 140              		.section	.text.StartCommTask,"ax",%progbits
 141              		.align	1
 142              		.global	StartCommTask
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	StartCommTask:
 148              	.LVL11:
 149              	.LFB226:
 139:Core/Src/freertos.c ****   /* USER CODE END StartDriveTask */
 140:Core/Src/freertos.c **** }
 141:Core/Src/freertos.c **** 
 142:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartCommTask */
 143:Core/Src/freertos.c **** /**
 144:Core/Src/freertos.c **** * @brief Function implementing the commTask thread.
 145:Core/Src/freertos.c **** * @param argument: Not used
 146:Core/Src/freertos.c **** * @retval None
 147:Core/Src/freertos.c **** */
 148:Core/Src/freertos.c **** /* USER CODE END Header_StartCommTask */
 149:Core/Src/freertos.c **** void StartCommTask(void const * argument)
 150:Core/Src/freertos.c **** {
 150              		.loc 1 150 1 view -0
 151              		.cfi_startproc
 152              		@ Volatile: function does not return.
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		.loc 1 150 1 is_stmt 0 view .LVU18
 156 0000 08B5     		push	{r3, lr}
 157              	.LCFI3:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 3, -8
 160              		.cfi_offset 14, -4
 151:Core/Src/freertos.c ****   /* USER CODE BEGIN StartCommTask */
 152:Core/Src/freertos.c ****   /* Infinite loop */
 153:Core/Src/freertos.c ****   ExStartCommTask(argument);
 161              		.loc 1 153 3 is_stmt 1 view .LVU19
 162 0002 FFF7FEFF 		bl	ExStartCommTask
 163              	.LVL12:
 164              		.loc 1 153 3 is_stmt 0 view .LVU20
 165              		.cfi_endproc
 166              	.LFE226:
 168              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 169              		.align	1
 170              		.global	vApplicationGetIdleTaskMemory
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s 			page 7


 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 175              	vApplicationGetIdleTaskMemory:
 176              	.LVL13:
 177              	.LFB223:
  73:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 178              		.loc 1 73 1 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
  74:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 183              		.loc 1 74 3 view .LVU22
  74:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 184              		.loc 1 74 25 is_stmt 0 view .LVU23
 185 0000 034B     		ldr	r3, .L16
 186 0002 0360     		str	r3, [r0]
  75:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 187              		.loc 1 75 3 is_stmt 1 view .LVU24
  75:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 188              		.loc 1 75 27 is_stmt 0 view .LVU25
 189 0004 034B     		ldr	r3, .L16+4
 190 0006 0B60     		str	r3, [r1]
  76:Core/Src/freertos.c ****   /* place for user code */
 191              		.loc 1 76 3 is_stmt 1 view .LVU26
  76:Core/Src/freertos.c ****   /* place for user code */
 192              		.loc 1 76 25 is_stmt 0 view .LVU27
 193 0008 8023     		movs	r3, #128
 194 000a 1360     		str	r3, [r2]
  78:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 195              		.loc 1 78 1 view .LVU28
 196 000c 7047     		bx	lr
 197              	.L17:
 198 000e 00BF     		.align	2
 199              	.L16:
 200 0010 00000000 		.word	xIdleTaskTCBBuffer
 201 0014 00000000 		.word	xIdleStack
 202              		.cfi_endproc
 203              	.LFE223:
 205              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 206              		.align	1
 207              		.global	MX_FREERTOS_Init
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	MX_FREERTOS_Init:
 213              	.LFB224:
  86:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 214              		.loc 1 86 29 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 64
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 30B5     		push	{r4, r5, lr}
 219              	.LCFI4:
 220              		.cfi_def_cfa_offset 12
 221              		.cfi_offset 4, -12
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s 			page 8


 222              		.cfi_offset 5, -8
 223              		.cfi_offset 14, -4
 224 0002 91B0     		sub	sp, sp, #68
 225              	.LCFI5:
 226              		.cfi_def_cfa_offset 80
  97:Core/Src/freertos.c ****   CommSemaphoreHandle = osSemaphoreCreate(osSemaphore(CommSemaphore), 1);
 227              		.loc 1 97 3 view .LVU30
 228 0004 0025     		movs	r5, #0
 229 0006 0E95     		str	r5, [sp, #56]
 230 0008 0F95     		str	r5, [sp, #60]
  98:Core/Src/freertos.c **** 
 231              		.loc 1 98 3 view .LVU31
  98:Core/Src/freertos.c **** 
 232              		.loc 1 98 25 is_stmt 0 view .LVU32
 233 000a 0121     		movs	r1, #1
 234 000c 0EA8     		add	r0, sp, #56
 235 000e FFF7FEFF 		bl	osSemaphoreCreate
 236              	.LVL14:
  98:Core/Src/freertos.c **** 
 237              		.loc 1 98 23 view .LVU33
 238 0012 134B     		ldr	r3, .L20
 239 0014 1860     		str	r0, [r3]
 114:Core/Src/freertos.c ****   driveTaskHandle = osThreadCreate(osThread(driveTask), NULL);
 240              		.loc 1 114 3 is_stmt 1 view .LVU34
 241 0016 134C     		ldr	r4, .L20+4
 242 0018 0DF11C0C 		add	ip, sp, #28
 243 001c A646     		mov	lr, r4
 244 001e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 245 0022 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 246 0026 9EE80700 		ldm	lr, {r0, r1, r2}
 247 002a 8CE80700 		stm	ip, {r0, r1, r2}
 115:Core/Src/freertos.c **** 
 248              		.loc 1 115 3 view .LVU35
 115:Core/Src/freertos.c **** 
 249              		.loc 1 115 21 is_stmt 0 view .LVU36
 250 002e 2946     		mov	r1, r5
 251 0030 07A8     		add	r0, sp, #28
 252 0032 FFF7FEFF 		bl	osThreadCreate
 253              	.LVL15:
 115:Core/Src/freertos.c **** 
 254              		.loc 1 115 19 view .LVU37
 255 0036 0C4B     		ldr	r3, .L20+8
 256 0038 1860     		str	r0, [r3]
 118:Core/Src/freertos.c ****   commTaskHandle = osThreadCreate(osThread(commTask), NULL);
 257              		.loc 1 118 3 is_stmt 1 view .LVU38
 258 003a EE46     		mov	lr, sp
 259 003c 04F11C0C 		add	ip, r4, #28
 260 0040 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 261 0044 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 262 0048 9CE80700 		ldm	ip, {r0, r1, r2}
 263 004c 8EE80700 		stm	lr, {r0, r1, r2}
 119:Core/Src/freertos.c **** 
 264              		.loc 1 119 3 view .LVU39
 119:Core/Src/freertos.c **** 
 265              		.loc 1 119 20 is_stmt 0 view .LVU40
 266 0050 2946     		mov	r1, r5
 267 0052 6846     		mov	r0, sp
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s 			page 9


 268 0054 FFF7FEFF 		bl	osThreadCreate
 269              	.LVL16:
 119:Core/Src/freertos.c **** 
 270              		.loc 1 119 18 view .LVU41
 271 0058 044B     		ldr	r3, .L20+12
 272 005a 1860     		str	r0, [r3]
 125:Core/Src/freertos.c **** 
 273              		.loc 1 125 1 view .LVU42
 274 005c 11B0     		add	sp, sp, #68
 275              	.LCFI6:
 276              		.cfi_def_cfa_offset 12
 277              		@ sp needed
 278 005e 30BD     		pop	{r4, r5, pc}
 279              	.L21:
 280              		.align	2
 281              	.L20:
 282 0060 00000000 		.word	CommSemaphoreHandle
 283 0064 00000000 		.word	.LANCHOR0
 284 0068 00000000 		.word	driveTaskHandle
 285 006c 00000000 		.word	commTaskHandle
 286              		.cfi_endproc
 287              	.LFE224:
 289              		.section	.rodata.str1.4,"aMS",%progbits,1
 290              		.align	2
 291              	.LC2:
 292 0000 636F6D6D 		.ascii	"commTask\000"
 292      5461736B 
 292      00
 293 0009 000000   		.align	2
 294              	.LC0:
 295 000c 64726976 		.ascii	"driveTask\000"
 295      65546173 
 295      6B00
 296              		.section	.bss.xIdleStack,"aw",%nobits
 297              		.align	2
 300              	xIdleStack:
 301 0000 00000000 		.space	512
 301      00000000 
 301      00000000 
 301      00000000 
 301      00000000 
 302              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 303              		.align	2
 306              	xIdleTaskTCBBuffer:
 307 0000 00000000 		.space	84
 307      00000000 
 307      00000000 
 307      00000000 
 307      00000000 
 308              		.global	CommSemaphoreHandle
 309              		.section	.bss.CommSemaphoreHandle,"aw",%nobits
 310              		.align	2
 313              	CommSemaphoreHandle:
 314 0000 00000000 		.space	4
 315              		.global	commTaskHandle
 316              		.section	.bss.commTaskHandle,"aw",%nobits
 317              		.align	2
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s 			page 10


 320              	commTaskHandle:
 321 0000 00000000 		.space	4
 322              		.global	driveTaskHandle
 323              		.section	.bss.driveTaskHandle,"aw",%nobits
 324              		.align	2
 327              	driveTaskHandle:
 328 0000 00000000 		.space	4
 329              		.section	.rodata
 330              		.align	2
 331              		.set	.LANCHOR0,. + 0
 332              	.LC4:
 333 0000 0C000000 		.word	.LC0
 334 0004 00000000 		.word	StartDriveTask
 335 0008 0000     		.short	0
 336 000a 0000     		.space	2
 337 000c 00000000 		.word	0
 338 0010 00040000 		.word	1024
 339 0014 00000000 		.word	0
 340 0018 00000000 		.word	0
 341              	.LC5:
 342 001c 00000000 		.word	.LC2
 343 0020 00000000 		.word	StartCommTask
 344 0024 0000     		.short	0
 345 0026 0000     		.space	2
 346 0028 00000000 		.word	0
 347 002c 00040000 		.word	1024
 348 0030 00000000 		.word	0
 349 0034 00000000 		.word	0
 350              		.text
 351              	.Letext0:
 352              		.file 4 "c:\\program files\\arm-gnu-toolchain-12.2.mpacbti-rel1-mingw-w64-i686-arm-none-eabi\\arm-
 353              		.file 5 "c:\\program files\\arm-gnu-toolchain-12.2.mpacbti-rel1-mingw-w64-i686-arm-none-eabi\\arm-
 354              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 355              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 356              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 357              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 358              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 359              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 360              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 361              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:21     .text.ExStartDriveTask:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:27     .text.ExStartDriveTask:00000000 ExStartDriveTask
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:64     .text.ExStartDriveTask:00000020 $d
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:69     .text.StartDriveTask:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:75     .text.StartDriveTask:00000000 StartDriveTask
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:97     .text.ExStartCommTask:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:103    .text.ExStartCommTask:00000000 ExStartCommTask
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:136    .text.ExStartCommTask:00000018 $d
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:141    .text.StartCommTask:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:147    .text.StartCommTask:00000000 StartCommTask
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:169    .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:175    .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:200    .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:306    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:300    .bss.xIdleStack:00000000 xIdleStack
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:206    .text.MX_FREERTOS_Init:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:212    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:282    .text.MX_FREERTOS_Init:00000060 $d
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:313    .bss.CommSemaphoreHandle:00000000 CommSemaphoreHandle
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:327    .bss.driveTaskHandle:00000000 driveTaskHandle
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:320    .bss.commTaskHandle:00000000 commTaskHandle
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:290    .rodata.str1.4:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:297    .bss.xIdleStack:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:303    .bss.xIdleTaskTCBBuffer:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:310    .bss.CommSemaphoreHandle:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:317    .bss.commTaskHandle:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:324    .bss.driveTaskHandle:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccYOOsax.s:330    .rodata:00000000 $d

UNDEFINED SYMBOLS
osDelay
HAL_GPIO_WritePin
osSemaphoreCreate
osThreadCreate
