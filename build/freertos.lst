ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.section	.rodata.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 64726976 		.ascii	"driveTask\000"
  19      65546173 
  19      6B00
  20 000a 0000     		.align	2
  21              	.LC2:
  22 000c 636F6D6D 		.ascii	"commTask\000"
  22      5461736B 
  22      00
  23              		.text
  24              	.Ltext0:
  25              		.cfi_sections	.debug_frame
  26              		.section	.text.measure,"ax",%progbits
  27              		.align	1
  28              		.global	measure
  29              		.syntax unified
  30              		.thumb
  31              		.thumb_func
  33              	measure:
  34              	.LFB222:
  35              		.file 1 "Core/Src/driver.c"
   1:Core/Src/driver.c **** #include "FreeRTOS.h"
   2:Core/Src/driver.c **** #include "task.h"
   3:Core/Src/driver.c **** #include "cmsis_os.h"
   4:Core/Src/driver.c **** #include "adc.h"
   5:Core/Src/driver.c **** 
   6:Core/Src/driver.c **** bool isWhite[SENSOR_NUMBER];
   7:Core/Src/driver.c **** int readings[SENSOR_NUMBER];
   8:Core/Src/driver.c **** 
   9:Core/Src/driver.c **** void clearReadings();
  10:Core/Src/driver.c **** void measure();
  11:Core/Src/driver.c **** 
  12:Core/Src/driver.c **** /* ---- TASK IMPLEMENTATION ---- */
  13:Core/Src/driver.c **** 
  14:Core/Src/driver.c **** extern void ExStartDriveTask(void const * argument) {
  15:Core/Src/driver.c ****   /* USER CODE BEGIN StartDriveTask */
  16:Core/Src/driver.c ****   /* Infinite loop */
  17:Core/Src/driver.c ****   for(;;)
  18:Core/Src/driver.c ****   {
  19:Core/Src/driver.c ****     osDelay(SENSOR_DELAY);
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 2


  20:Core/Src/driver.c ****     measure();
  21:Core/Src/driver.c ****     osDelay(SENSOR_DELAY);
  22:Core/Src/driver.c ****   }
  23:Core/Src/driver.c ****   /* USER CODE END StartDriveTask */
  24:Core/Src/driver.c **** }
  25:Core/Src/driver.c **** 
  26:Core/Src/driver.c **** 
  27:Core/Src/driver.c **** 
  28:Core/Src/driver.c **** /* ---- SENSOR FUNCTIONS ---- */
  29:Core/Src/driver.c **** 
  30:Core/Src/driver.c **** void measure() {
  36              		.loc 1 30 16 view -0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40 0000 38B5     		push	{r3, r4, r5, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 16
  43              		.cfi_offset 3, -16
  44              		.cfi_offset 4, -12
  45              		.cfi_offset 5, -8
  46              		.cfi_offset 14, -4
  31:Core/Src/driver.c **** 	HAL_ADC_Start(&hadc1);
  47              		.loc 1 31 2 view .LVU1
  48 0002 0F48     		ldr	r0, .L8
  49 0004 FFF7FEFF 		bl	HAL_ADC_Start
  50              	.LVL0:
  32:Core/Src/driver.c **** 
  33:Core/Src/driver.c **** 	for(int i = 0; i < SENSOR_NUMBER; i++) {
  51              		.loc 1 33 2 view .LVU2
  52              	.LBB2:
  53              		.loc 1 33 6 view .LVU3
  54              		.loc 1 33 10 is_stmt 0 view .LVU4
  55 0008 0024     		movs	r4, #0
  56              		.loc 1 33 2 view .LVU5
  57 000a 03E0     		b	.L2
  58              	.LVL1:
  59              	.L3:
  34:Core/Src/driver.c **** 		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
  35:Core/Src/driver.c **** 		readings[i] = HAL_ADC_GetValue(&hadc1);
  36:Core/Src/driver.c **** 
  37:Core/Src/driver.c **** 		if(readings[i] < TRESHOLD) isWhite[i] = true;
  38:Core/Src/driver.c **** 		else isWhite[i] = false;
  60              		.loc 1 38 8 is_stmt 1 view .LVU6
  61              		.loc 1 38 19 is_stmt 0 view .LVU7
  62 000c 0D4B     		ldr	r3, .L8+4
  63 000e 0022     		movs	r2, #0
  64 0010 1A55     		strb	r2, [r3, r4]
  65              	.L4:
  33:Core/Src/driver.c **** 		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
  66              		.loc 1 33 36 is_stmt 1 discriminator 2 view .LVU8
  33:Core/Src/driver.c **** 		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
  67              		.loc 1 33 37 is_stmt 0 discriminator 2 view .LVU9
  68 0012 0134     		adds	r4, r4, #1
  69              	.LVL2:
  70              	.L2:
  33:Core/Src/driver.c **** 		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 3


  71              		.loc 1 33 17 is_stmt 1 discriminator 1 view .LVU10
  33:Core/Src/driver.c **** 		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
  72              		.loc 1 33 2 is_stmt 0 discriminator 1 view .LVU11
  73 0014 012C     		cmp	r4, #1
  74 0016 12DC     		bgt	.L7
  34:Core/Src/driver.c **** 		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
  75              		.loc 1 34 3 is_stmt 1 view .LVU12
  76 0018 094D     		ldr	r5, .L8
  77 001a 4FF0FF31 		mov	r1, #-1
  78 001e 2846     		mov	r0, r5
  79 0020 FFF7FEFF 		bl	HAL_ADC_PollForConversion
  80              	.LVL3:
  35:Core/Src/driver.c **** 
  81              		.loc 1 35 3 view .LVU13
  35:Core/Src/driver.c **** 
  82              		.loc 1 35 17 is_stmt 0 view .LVU14
  83 0024 2846     		mov	r0, r5
  84 0026 FFF7FEFF 		bl	HAL_ADC_GetValue
  85              	.LVL4:
  35:Core/Src/driver.c **** 
  86              		.loc 1 35 15 view .LVU15
  87 002a 074B     		ldr	r3, .L8+8
  88 002c 43F82400 		str	r0, [r3, r4, lsl #2]
  37:Core/Src/driver.c **** 		else isWhite[i] = false;
  89              		.loc 1 37 3 is_stmt 1 view .LVU16
  37:Core/Src/driver.c **** 		else isWhite[i] = false;
  90              		.loc 1 37 5 is_stmt 0 view .LVU17
  91 0030 B0F5806F 		cmp	r0, #1024
  92 0034 EADA     		bge	.L3
  37:Core/Src/driver.c **** 		else isWhite[i] = false;
  93              		.loc 1 37 30 is_stmt 1 discriminator 1 view .LVU18
  37:Core/Src/driver.c **** 		else isWhite[i] = false;
  94              		.loc 1 37 41 is_stmt 0 discriminator 1 view .LVU19
  95 0036 034B     		ldr	r3, .L8+4
  96 0038 0122     		movs	r2, #1
  97 003a 1A55     		strb	r2, [r3, r4]
  98 003c E9E7     		b	.L4
  99              	.L7:
 100              	.LBE2:
  39:Core/Src/driver.c **** 	}
  40:Core/Src/driver.c **** }
 101              		.loc 1 40 1 view .LVU20
 102 003e 38BD     		pop	{r3, r4, r5, pc}
 103              	.LVL5:
 104              	.L9:
 105              		.loc 1 40 1 view .LVU21
 106              		.align	2
 107              	.L8:
 108 0040 00000000 		.word	hadc1
 109 0044 00000000 		.word	.LANCHOR1
 110 0048 00000000 		.word	.LANCHOR0
 111              		.cfi_endproc
 112              	.LFE222:
 114              		.section	.text.ExStartDriveTask,"ax",%progbits
 115              		.align	1
 116              		.global	ExStartDriveTask
 117              		.syntax unified
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 4


 118              		.thumb
 119              		.thumb_func
 121              	ExStartDriveTask:
 122              	.LFB221:
  14:Core/Src/driver.c ****   /* USER CODE BEGIN StartDriveTask */
 123              		.loc 1 14 53 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ Volatile: function does not return.
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              	.LVL6:
  14:Core/Src/driver.c ****   /* USER CODE BEGIN StartDriveTask */
 129              		.loc 1 14 53 is_stmt 0 view .LVU23
 130 0000 08B5     		push	{r3, lr}
 131              	.LCFI1:
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 3, -8
 134              		.cfi_offset 14, -4
 135              	.LVL7:
 136              	.L11:
  17:Core/Src/driver.c ****   {
 137              		.loc 1 17 3 is_stmt 1 discriminator 1 view .LVU24
  19:Core/Src/driver.c ****     measure();
 138              		.loc 1 19 5 discriminator 1 view .LVU25
 139 0002 C820     		movs	r0, #200
 140 0004 FFF7FEFF 		bl	osDelay
 141              	.LVL8:
  20:Core/Src/driver.c ****     osDelay(SENSOR_DELAY);
 142              		.loc 1 20 5 discriminator 1 view .LVU26
 143 0008 FFF7FEFF 		bl	measure
 144              	.LVL9:
  21:Core/Src/driver.c ****   }
 145              		.loc 1 21 5 discriminator 1 view .LVU27
 146 000c C820     		movs	r0, #200
 147 000e FFF7FEFF 		bl	osDelay
 148              	.LVL10:
  17:Core/Src/driver.c ****   {
 149              		.loc 1 17 8 discriminator 1 view .LVU28
 150 0012 F6E7     		b	.L11
 151              		.cfi_endproc
 152              	.LFE221:
 154              		.section	.text.StartDriveTask,"ax",%progbits
 155              		.align	1
 156              		.global	StartDriveTask
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	StartDriveTask:
 162              	.LVL11:
 163              	.LFB228:
 164              		.file 2 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 5


   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include "driver.c"
  29:Core/Src/freertos.c **** #include "comm.c"
  30:Core/Src/freertos.c **** /* USER CODE END Includes */
  31:Core/Src/freertos.c **** 
  32:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/freertos.c **** 
  35:Core/Src/freertos.c **** /* USER CODE END PTD */
  36:Core/Src/freertos.c **** 
  37:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* USER CODE END PD */
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* USER CODE END PM */
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* USER CODE END Variables */
  51:Core/Src/freertos.c **** osThreadId driveTaskHandle;
  52:Core/Src/freertos.c **** osThreadId commTaskHandle;
  53:Core/Src/freertos.c **** osSemaphoreId CommSemaphoreHandle;
  54:Core/Src/freertos.c **** 
  55:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  59:Core/Src/freertos.c **** 
  60:Core/Src/freertos.c **** void StartDriveTask(void const * argument);
  61:Core/Src/freertos.c **** void StartCommTask(void const * argument);
  62:Core/Src/freertos.c **** 
  63:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 6


  64:Core/Src/freertos.c **** 
  65:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  66:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  67:Core/Src/freertos.c **** 
  68:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  69:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  70:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  71:Core/Src/freertos.c **** 
  72:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  73:Core/Src/freertos.c **** {
  74:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  75:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  76:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  77:Core/Src/freertos.c ****   /* place for user code */
  78:Core/Src/freertos.c **** }
  79:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  80:Core/Src/freertos.c **** 
  81:Core/Src/freertos.c **** /**
  82:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  83:Core/Src/freertos.c ****   * @param  None
  84:Core/Src/freertos.c ****   * @retval None
  85:Core/Src/freertos.c ****   */
  86:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  87:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c ****   /* USER CODE END Init */
  90:Core/Src/freertos.c **** 
  91:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  92:Core/Src/freertos.c ****   /* add mutexes, ... */
  93:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  94:Core/Src/freertos.c **** 
  95:Core/Src/freertos.c ****   /* Create the semaphores(s) */
  96:Core/Src/freertos.c ****   /* definition and creation of CommSemaphore */
  97:Core/Src/freertos.c ****   osSemaphoreDef(CommSemaphore);
  98:Core/Src/freertos.c ****   CommSemaphoreHandle = osSemaphoreCreate(osSemaphore(CommSemaphore), 1);
  99:Core/Src/freertos.c **** 
 100:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 101:Core/Src/freertos.c ****   /* add semaphores, ... */
 102:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 103:Core/Src/freertos.c **** 
 104:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 105:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 106:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 107:Core/Src/freertos.c **** 
 108:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 109:Core/Src/freertos.c ****   /* add queues, ... */
 110:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 111:Core/Src/freertos.c **** 
 112:Core/Src/freertos.c ****   /* Create the thread(s) */
 113:Core/Src/freertos.c ****   /* definition and creation of driveTask */
 114:Core/Src/freertos.c ****   osThreadDef(driveTask, StartDriveTask, osPriorityNormal, 0, 1024);
 115:Core/Src/freertos.c ****   driveTaskHandle = osThreadCreate(osThread(driveTask), NULL);
 116:Core/Src/freertos.c **** 
 117:Core/Src/freertos.c ****   /* definition and creation of commTask */
 118:Core/Src/freertos.c ****   osThreadDef(commTask, StartCommTask, osPriorityNormal, 0, 1024);
 119:Core/Src/freertos.c ****   commTaskHandle = osThreadCreate(osThread(commTask), NULL);
 120:Core/Src/freertos.c **** 
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 7


 121:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 122:Core/Src/freertos.c ****   /* add threads, ... */
 123:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 124:Core/Src/freertos.c **** 
 125:Core/Src/freertos.c **** }
 126:Core/Src/freertos.c **** 
 127:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDriveTask */
 128:Core/Src/freertos.c **** /**
 129:Core/Src/freertos.c ****   * @brief  Function implementing the driveTask thread.
 130:Core/Src/freertos.c ****   * @param  argument: Not used
 131:Core/Src/freertos.c ****   * @retval None
 132:Core/Src/freertos.c ****   */
 133:Core/Src/freertos.c **** /* USER CODE END Header_StartDriveTask */
 134:Core/Src/freertos.c **** void StartDriveTask(void const * argument)
 135:Core/Src/freertos.c **** {
 165              		.loc 2 135 1 view -0
 166              		.cfi_startproc
 167              		@ Volatile: function does not return.
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		.loc 2 135 1 is_stmt 0 view .LVU30
 171 0000 08B5     		push	{r3, lr}
 172              	.LCFI2:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
 136:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDriveTask */
 137:Core/Src/freertos.c ****   /* Infinite loop */
 138:Core/Src/freertos.c ****   ExStartDriveTask(argument);
 176              		.loc 2 138 3 is_stmt 1 view .LVU31
 177 0002 FFF7FEFF 		bl	ExStartDriveTask
 178              	.LVL12:
 179              		.loc 2 138 3 is_stmt 0 view .LVU32
 180              		.cfi_endproc
 181              	.LFE228:
 183              		.section	.text.clearReadings,"ax",%progbits
 184              		.align	1
 185              		.global	clearReadings
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	clearReadings:
 191              	.LFB223:
  41:Core/Src/driver.c **** 
  42:Core/Src/driver.c **** void clearReadings() {
 192              		.loc 1 42 22 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
  43:Core/Src/driver.c **** 	for(int i = 0; i < SENSOR_NUMBER; i++) {
 197              		.loc 1 43 2 view .LVU34
 198              	.LBB3:
 199              		.loc 1 43 6 view .LVU35
 200              	.LVL13:
 201              		.loc 1 43 10 is_stmt 0 view .LVU36
 202 0000 0023     		movs	r3, #0
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 8


 203              		.loc 1 43 2 view .LVU37
 204 0002 08E0     		b	.L16
 205              	.LVL14:
 206              	.L17:
  44:Core/Src/driver.c **** 		readings[i] = CLEARED_READING;
 207              		.loc 1 44 3 is_stmt 1 discriminator 3 view .LVU38
 208              		.loc 1 44 15 is_stmt 0 discriminator 3 view .LVU39
 209 0004 054A     		ldr	r2, .L18
 210 0006 4FF40061 		mov	r1, #2048
 211 000a 42F82310 		str	r1, [r2, r3, lsl #2]
  45:Core/Src/driver.c **** 		isWhite[i] = false;
 212              		.loc 1 45 3 is_stmt 1 discriminator 3 view .LVU40
 213              		.loc 1 45 14 is_stmt 0 discriminator 3 view .LVU41
 214 000e 044A     		ldr	r2, .L18+4
 215 0010 0021     		movs	r1, #0
 216 0012 D154     		strb	r1, [r2, r3]
  43:Core/Src/driver.c **** 	for(int i = 0; i < SENSOR_NUMBER; i++) {
 217              		.loc 1 43 36 is_stmt 1 discriminator 3 view .LVU42
  43:Core/Src/driver.c **** 	for(int i = 0; i < SENSOR_NUMBER; i++) {
 218              		.loc 1 43 37 is_stmt 0 discriminator 3 view .LVU43
 219 0014 0133     		adds	r3, r3, #1
 220              	.LVL15:
 221              	.L16:
  43:Core/Src/driver.c **** 	for(int i = 0; i < SENSOR_NUMBER; i++) {
 222              		.loc 1 43 17 is_stmt 1 discriminator 1 view .LVU44
  43:Core/Src/driver.c **** 	for(int i = 0; i < SENSOR_NUMBER; i++) {
 223              		.loc 1 43 2 is_stmt 0 discriminator 1 view .LVU45
 224 0016 012B     		cmp	r3, #1
 225 0018 F4DD     		ble	.L17
 226              	.LBE3:
  46:Core/Src/driver.c **** 	}
  47:Core/Src/driver.c **** }
 227              		.loc 1 47 1 view .LVU46
 228 001a 7047     		bx	lr
 229              	.L19:
 230              		.align	2
 231              	.L18:
 232 001c 00000000 		.word	.LANCHOR0
 233 0020 00000000 		.word	.LANCHOR1
 234              		.cfi_endproc
 235              	.LFE223:
 237              		.section	.text.ExStartCommTask,"ax",%progbits
 238              		.align	1
 239              		.global	ExStartCommTask
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 244              	ExStartCommTask:
 245              	.LFB224:
 246              		.file 3 "Core/Src/comm.c"
   1:Core/Src/comm.c **** #include "FreeRTOS.h"
   2:Core/Src/comm.c **** #include "task.h"
   3:Core/Src/comm.c **** #include "main.h"
   4:Core/Src/comm.c **** #include "cmsis_os.h"
   5:Core/Src/comm.c **** #include "usart.h"
   6:Core/Src/comm.c **** #include <string.h>
   7:Core/Src/comm.c **** 
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 9


   8:Core/Src/comm.c ****   extern bool isWhite[SENSOR_NUMBER];
   9:Core/Src/comm.c ****   extern int readings[SENSOR_NUMBER];
  10:Core/Src/comm.c ****   extern UART_HandleTypeDef huart6;
  11:Core/Src/comm.c ****   bool test1, test2;
  12:Core/Src/comm.c **** 
  13:Core/Src/comm.c ****   char* data = "test";
  14:Core/Src/comm.c ****   void ExStartCommTask(void const * argument){
 247              		.loc 3 14 46 is_stmt 1 view -0
 248              		.cfi_startproc
 249              		@ Volatile: function does not return.
 250              		@ args = 0, pretend = 0, frame = 8
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              	.LVL16:
 253              		.loc 3 14 46 is_stmt 0 view .LVU48
 254 0000 00B5     		push	{lr}
 255              	.LCFI3:
 256              		.cfi_def_cfa_offset 4
 257              		.cfi_offset 14, -4
 258 0002 83B0     		sub	sp, sp, #12
 259              	.LCFI4:
 260              		.cfi_def_cfa_offset 16
 261              	.LVL17:
 262              	.L21:
  15:Core/Src/comm.c ****   uint8_t buffer[8];
 263              		.loc 3 15 3 is_stmt 1 discriminator 1 view .LVU49
  16:Core/Src/comm.c ****   for(;;) {
 264              		.loc 3 16 3 discriminator 1 view .LVU50
  17:Core/Src/comm.c ****     test1 = isWhite[0];
 265              		.loc 3 17 5 discriminator 1 view .LVU51
 266              		.loc 3 17 20 is_stmt 0 discriminator 1 view .LVU52
 267 0004 0E4B     		ldr	r3, .L23
 268 0006 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 269              		.loc 3 17 11 discriminator 1 view .LVU53
 270 0008 0E4A     		ldr	r2, .L23+4
 271 000a 1170     		strb	r1, [r2]
  18:Core/Src/comm.c ****     test2 = isWhite[1];
 272              		.loc 3 18 5 is_stmt 1 discriminator 1 view .LVU54
 273              		.loc 3 18 20 is_stmt 0 discriminator 1 view .LVU55
 274 000c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 275              		.loc 3 18 11 discriminator 1 view .LVU56
 276 000e 0E4B     		ldr	r3, .L23+8
 277 0010 1A70     		strb	r2, [r3]
  19:Core/Src/comm.c ****     HAL_UART_Transmit(&huart6, (uint8_t*) data, strlen(data), 250);
 278              		.loc 3 19 5 is_stmt 1 discriminator 1 view .LVU57
 279 0012 0E4B     		ldr	r3, .L23+12
 280 0014 1D68     		ldr	r5, [r3]
 281              		.loc 3 19 49 is_stmt 0 discriminator 1 view .LVU58
 282 0016 2846     		mov	r0, r5
 283 0018 FFF7FEFF 		bl	strlen
 284              	.LVL18:
 285              		.loc 3 19 5 discriminator 1 view .LVU59
 286 001c 0C4C     		ldr	r4, .L23+16
 287 001e FA23     		movs	r3, #250
 288 0020 82B2     		uxth	r2, r0
 289 0022 2946     		mov	r1, r5
 290 0024 2046     		mov	r0, r4
 291 0026 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 10


 292              	.LVL19:
  20:Core/Src/comm.c ****     HAL_UART_Receive(&huart6,buffer, sizeof(buffer),100);
 293              		.loc 3 20 5 is_stmt 1 discriminator 1 view .LVU60
 294 002a 6423     		movs	r3, #100
 295 002c 0822     		movs	r2, #8
 296 002e 6946     		mov	r1, sp
 297 0030 2046     		mov	r0, r4
 298 0032 FFF7FEFF 		bl	HAL_UART_Receive
 299              	.LVL20:
  21:Core/Src/comm.c ****     osDelay(1);
 300              		.loc 3 21 5 discriminator 1 view .LVU61
 301 0036 0120     		movs	r0, #1
 302 0038 FFF7FEFF 		bl	osDelay
 303              	.LVL21:
  16:Core/Src/comm.c ****     test1 = isWhite[0];
 304              		.loc 3 16 8 discriminator 1 view .LVU62
 305 003c E2E7     		b	.L21
 306              	.L24:
 307 003e 00BF     		.align	2
 308              	.L23:
 309 0040 00000000 		.word	.LANCHOR1
 310 0044 00000000 		.word	.LANCHOR2
 311 0048 00000000 		.word	.LANCHOR3
 312 004c 00000000 		.word	.LANCHOR4
 313 0050 00000000 		.word	huart6
 314              		.cfi_endproc
 315              	.LFE224:
 317              		.section	.text.StartCommTask,"ax",%progbits
 318              		.align	1
 319              		.global	StartCommTask
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	StartCommTask:
 325              	.LVL22:
 326              	.LFB229:
 139:Core/Src/freertos.c ****   /* USER CODE END StartDriveTask */
 140:Core/Src/freertos.c **** }
 141:Core/Src/freertos.c **** 
 142:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartCommTask */
 143:Core/Src/freertos.c **** /**
 144:Core/Src/freertos.c **** * @brief Function implementing the commTask thread.
 145:Core/Src/freertos.c **** * @param argument: Not used
 146:Core/Src/freertos.c **** * @retval None
 147:Core/Src/freertos.c **** */
 148:Core/Src/freertos.c **** /* USER CODE END Header_StartCommTask */
 149:Core/Src/freertos.c **** void StartCommTask(void const * argument)
 150:Core/Src/freertos.c **** {
 327              		.loc 2 150 1 view -0
 328              		.cfi_startproc
 329              		@ Volatile: function does not return.
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		.loc 2 150 1 is_stmt 0 view .LVU64
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI5:
 335              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 11


 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
 151:Core/Src/freertos.c ****   /* USER CODE BEGIN StartCommTask */
 152:Core/Src/freertos.c ****   /* Infinite loop */
 153:Core/Src/freertos.c ****   ExStartCommTask(argument);
 338              		.loc 2 153 3 is_stmt 1 view .LVU65
 339 0002 FFF7FEFF 		bl	ExStartCommTask
 340              	.LVL23:
 341              		.loc 2 153 3 is_stmt 0 view .LVU66
 342              		.cfi_endproc
 343              	.LFE229:
 345              		.section	.text.sendMess,"ax",%progbits
 346              		.align	1
 347              		.global	sendMess
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	sendMess:
 353              	.LVL24:
 354              	.LFB225:
  22:Core/Src/comm.c ****   }
  23:Core/Src/comm.c **** 
  24:Core/Src/comm.c **** 
  25:Core/Src/comm.c **** }
  26:Core/Src/comm.c **** 
  27:Core/Src/comm.c **** void sendMess(uint8_t mode, uint8_t mess[8]){
 355              		.loc 3 27 45 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		.loc 3 27 45 is_stmt 0 view .LVU68
 360 0000 10B5     		push	{r4, lr}
 361              	.LCFI6:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
  28:Core/Src/comm.c **** 
  29:Core/Src/comm.c ****   HAL_UART_Transmit(&huart6, (uint8_t*) data, strlen(data), 250);
 365              		.loc 3 29 3 is_stmt 1 view .LVU69
 366 0002 064B     		ldr	r3, .L29
 367 0004 1C68     		ldr	r4, [r3]
 368              		.loc 3 29 47 is_stmt 0 view .LVU70
 369 0006 2046     		mov	r0, r4
 370              	.LVL25:
 371              		.loc 3 29 47 view .LVU71
 372 0008 FFF7FEFF 		bl	strlen
 373              	.LVL26:
 374              		.loc 3 29 3 view .LVU72
 375 000c FA23     		movs	r3, #250
 376 000e 82B2     		uxth	r2, r0
 377 0010 2146     		mov	r1, r4
 378 0012 0348     		ldr	r0, .L29+4
 379 0014 FFF7FEFF 		bl	HAL_UART_Transmit
 380              	.LVL27:
  30:Core/Src/comm.c **** }...
 381              		.loc 3 30 1 view .LVU73
 382 0018 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 12


 383              	.L30:
 384 001a 00BF     		.align	2
 385              	.L29:
 386 001c 00000000 		.word	.LANCHOR4
 387 0020 00000000 		.word	huart6
 388              		.cfi_endproc
 389              	.LFE225:
 391              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 392              		.align	1
 393              		.global	vApplicationGetIdleTaskMemory
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 398              	vApplicationGetIdleTaskMemory:
 399              	.LVL28:
 400              	.LFB226:
  73:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 401              		.loc 2 73 1 is_stmt 1 view -0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		@ link register save eliminated.
  74:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 406              		.loc 2 74 3 view .LVU75
  74:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 407              		.loc 2 74 25 is_stmt 0 view .LVU76
 408 0000 034B     		ldr	r3, .L32
 409 0002 0360     		str	r3, [r0]
  75:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 410              		.loc 2 75 3 is_stmt 1 view .LVU77
  75:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 411              		.loc 2 75 27 is_stmt 0 view .LVU78
 412 0004 034B     		ldr	r3, .L32+4
 413 0006 0B60     		str	r3, [r1]
  76:Core/Src/freertos.c ****   /* place for user code */
 414              		.loc 2 76 3 is_stmt 1 view .LVU79
  76:Core/Src/freertos.c ****   /* place for user code */
 415              		.loc 2 76 25 is_stmt 0 view .LVU80
 416 0008 8023     		movs	r3, #128
 417 000a 1360     		str	r3, [r2]
  78:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 418              		.loc 2 78 1 view .LVU81
 419 000c 7047     		bx	lr
 420              	.L33:
 421 000e 00BF     		.align	2
 422              	.L32:
 423 0010 00000000 		.word	.LANCHOR5
 424 0014 00000000 		.word	.LANCHOR6
 425              		.cfi_endproc
 426              	.LFE226:
 428              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 429              		.align	1
 430              		.global	MX_FREERTOS_Init
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 435              	MX_FREERTOS_Init:
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 13


 436              	.LFB227:
  86:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 437              		.loc 2 86 29 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 64
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441 0000 30B5     		push	{r4, r5, lr}
 442              	.LCFI7:
 443              		.cfi_def_cfa_offset 12
 444              		.cfi_offset 4, -12
 445              		.cfi_offset 5, -8
 446              		.cfi_offset 14, -4
 447 0002 91B0     		sub	sp, sp, #68
 448              	.LCFI8:
 449              		.cfi_def_cfa_offset 80
  97:Core/Src/freertos.c ****   CommSemaphoreHandle = osSemaphoreCreate(osSemaphore(CommSemaphore), 1);
 450              		.loc 2 97 3 view .LVU83
 451 0004 0025     		movs	r5, #0
 452 0006 0E95     		str	r5, [sp, #56]
 453 0008 0F95     		str	r5, [sp, #60]
  98:Core/Src/freertos.c **** 
 454              		.loc 2 98 3 view .LVU84
  98:Core/Src/freertos.c **** 
 455              		.loc 2 98 25 is_stmt 0 view .LVU85
 456 000a 0121     		movs	r1, #1
 457 000c 0EA8     		add	r0, sp, #56
 458 000e FFF7FEFF 		bl	osSemaphoreCreate
 459              	.LVL29:
  98:Core/Src/freertos.c **** 
 460              		.loc 2 98 23 view .LVU86
 461 0012 134B     		ldr	r3, .L36
 462 0014 1860     		str	r0, [r3]
 114:Core/Src/freertos.c ****   driveTaskHandle = osThreadCreate(osThread(driveTask), NULL);
 463              		.loc 2 114 3 is_stmt 1 view .LVU87
 464 0016 134C     		ldr	r4, .L36+4
 465 0018 0DF11C0C 		add	ip, sp, #28
 466 001c A646     		mov	lr, r4
 467 001e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 468 0022 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 469 0026 9EE80700 		ldm	lr, {r0, r1, r2}
 470 002a 8CE80700 		stm	ip, {r0, r1, r2}
 115:Core/Src/freertos.c **** 
 471              		.loc 2 115 3 view .LVU88
 115:Core/Src/freertos.c **** 
 472              		.loc 2 115 21 is_stmt 0 view .LVU89
 473 002e 2946     		mov	r1, r5
 474 0030 07A8     		add	r0, sp, #28
 475 0032 FFF7FEFF 		bl	osThreadCreate
 476              	.LVL30:
 115:Core/Src/freertos.c **** 
 477              		.loc 2 115 19 view .LVU90
 478 0036 0C4B     		ldr	r3, .L36+8
 479 0038 1860     		str	r0, [r3]
 118:Core/Src/freertos.c ****   commTaskHandle = osThreadCreate(osThread(commTask), NULL);
 480              		.loc 2 118 3 is_stmt 1 view .LVU91
 481 003a EE46     		mov	lr, sp
 482 003c 04F11C0C 		add	ip, r4, #28
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 14


 483 0040 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 484 0044 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 485 0048 9CE80700 		ldm	ip, {r0, r1, r2}
 486 004c 8EE80700 		stm	lr, {r0, r1, r2}
 119:Core/Src/freertos.c **** 
 487              		.loc 2 119 3 view .LVU92
 119:Core/Src/freertos.c **** 
 488              		.loc 2 119 20 is_stmt 0 view .LVU93
 489 0050 2946     		mov	r1, r5
 490 0052 6846     		mov	r0, sp
 491 0054 FFF7FEFF 		bl	osThreadCreate
 492              	.LVL31:
 119:Core/Src/freertos.c **** 
 493              		.loc 2 119 18 view .LVU94
 494 0058 044B     		ldr	r3, .L36+12
 495 005a 1860     		str	r0, [r3]
 125:Core/Src/freertos.c **** 
 496              		.loc 2 125 1 view .LVU95
 497 005c 11B0     		add	sp, sp, #68
 498              	.LCFI9:
 499              		.cfi_def_cfa_offset 12
 500              		@ sp needed
 501 005e 30BD     		pop	{r4, r5, pc}
 502              	.L37:
 503              		.align	2
 504              	.L36:
 505 0060 00000000 		.word	.LANCHOR7
 506 0064 00000000 		.word	.LANCHOR8
 507 0068 00000000 		.word	.LANCHOR9
 508 006c 00000000 		.word	.LANCHOR10
 509              		.cfi_endproc
 510              	.LFE227:
 512              		.global	CommSemaphoreHandle
 513              		.global	commTaskHandle
 514              		.global	driveTaskHandle
 515              		.global	data
 516              		.section	.rodata.str1.4
 517 0015 000000   		.align	2
 518              	.LC6:
 519 0018 74657374 		.ascii	"test\000"
 519      00
 520              		.global	test2
 521              		.global	test1
 522              		.global	readings
 523              		.global	isWhite
 524              		.section	.rodata
 525              		.align	2
 526              		.set	.LANCHOR8,. + 0
 527              	.LC4:
 528 0000 00000000 		.word	.LC0
 529 0004 00000000 		.word	StartDriveTask
 530 0008 0000     		.short	0
 531 000a 0000     		.space	2
 532 000c 00000000 		.word	0
 533 0010 00040000 		.word	1024
 534 0014 00000000 		.word	0
 535 0018 00000000 		.word	0
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 15


 536              	.LC5:
 537 001c 0C000000 		.word	.LC2
 538 0020 00000000 		.word	StartCommTask
 539 0024 0000     		.short	0
 540 0026 0000     		.space	2
 541 0028 00000000 		.word	0
 542 002c 00040000 		.word	1024
 543 0030 00000000 		.word	0
 544 0034 00000000 		.word	0
 545              		.section	.bss.CommSemaphoreHandle,"aw",%nobits
 546              		.align	2
 547              		.set	.LANCHOR7,. + 0
 550              	CommSemaphoreHandle:
 551 0000 00000000 		.space	4
 552              		.section	.bss.commTaskHandle,"aw",%nobits
 553              		.align	2
 554              		.set	.LANCHOR10,. + 0
 557              	commTaskHandle:
 558 0000 00000000 		.space	4
 559              		.section	.bss.driveTaskHandle,"aw",%nobits
 560              		.align	2
 561              		.set	.LANCHOR9,. + 0
 564              	driveTaskHandle:
 565 0000 00000000 		.space	4
 566              		.section	.bss.isWhite,"aw",%nobits
 567              		.align	2
 568              		.set	.LANCHOR1,. + 0
 571              	isWhite:
 572 0000 0000     		.space	2
 573              		.section	.bss.readings,"aw",%nobits
 574              		.align	2
 575              		.set	.LANCHOR0,. + 0
 578              	readings:
 579 0000 00000000 		.space	8
 579      00000000 
 580              		.section	.bss.test1,"aw",%nobits
 581              		.set	.LANCHOR2,. + 0
 584              	test1:
 585 0000 00       		.space	1
 586              		.section	.bss.test2,"aw",%nobits
 587              		.set	.LANCHOR3,. + 0
 590              	test2:
 591 0000 00       		.space	1
 592              		.section	.bss.xIdleStack,"aw",%nobits
 593              		.align	2
 594              		.set	.LANCHOR6,. + 0
 597              	xIdleStack:
 598 0000 00000000 		.space	512
 598      00000000 
 598      00000000 
 598      00000000 
 598      00000000 
 599              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 600              		.align	2
 601              		.set	.LANCHOR5,. + 0
 604              	xIdleTaskTCBBuffer:
 605 0000 00000000 		.space	84
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 16


 605      00000000 
 605      00000000 
 605      00000000 
 605      00000000 
 606              		.section	.data.data,"aw"
 607              		.align	2
 608              		.set	.LANCHOR4,. + 0
 611              	data:
 612 0000 18000000 		.word	.LC6
 613              		.text
 614              	.Letext0:
 615              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 616              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 617              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 618              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 619              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 620              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 621              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 622              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 623              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 624              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 625              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 626              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 627              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 628              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 629              		.file 18 "Core/Inc/adc.h"
 630              		.file 19 "Core/Inc/usart.h"
 631              		.file 20 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:17     .rodata.str1.4:00000000 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:27     .text.measure:00000000 $t
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:33     .text.measure:00000000 measure
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:108    .text.measure:00000040 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:115    .text.ExStartDriveTask:00000000 $t
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:121    .text.ExStartDriveTask:00000000 ExStartDriveTask
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:155    .text.StartDriveTask:00000000 $t
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:161    .text.StartDriveTask:00000000 StartDriveTask
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:184    .text.clearReadings:00000000 $t
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:190    .text.clearReadings:00000000 clearReadings
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:232    .text.clearReadings:0000001c $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:238    .text.ExStartCommTask:00000000 $t
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:244    .text.ExStartCommTask:00000000 ExStartCommTask
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:309    .text.ExStartCommTask:00000040 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:318    .text.StartCommTask:00000000 $t
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:324    .text.StartCommTask:00000000 StartCommTask
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:346    .text.sendMess:00000000 $t
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:352    .text.sendMess:00000000 sendMess
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:386    .text.sendMess:0000001c $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:392    .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:398    .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:423    .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:429    .text.MX_FREERTOS_Init:00000000 $t
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:435    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:505    .text.MX_FREERTOS_Init:00000060 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:550    .bss.CommSemaphoreHandle:00000000 CommSemaphoreHandle
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:557    .bss.commTaskHandle:00000000 commTaskHandle
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:564    .bss.driveTaskHandle:00000000 driveTaskHandle
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:611    .data.data:00000000 data
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:590    .bss.test2:00000000 test2
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:584    .bss.test1:00000000 test1
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:578    .bss.readings:00000000 readings
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:571    .bss.isWhite:00000000 isWhite
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:525    .rodata:00000000 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:546    .bss.CommSemaphoreHandle:00000000 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:553    .bss.commTaskHandle:00000000 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:560    .bss.driveTaskHandle:00000000 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:567    .bss.isWhite:00000000 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:574    .bss.readings:00000000 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:585    .bss.test1:00000000 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:591    .bss.test2:00000000 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:593    .bss.xIdleStack:00000000 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:597    .bss.xIdleStack:00000000 xIdleStack
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:600    .bss.xIdleTaskTCBBuffer:00000000 $d
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:604    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s:607    .data.data:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
hadc1
osDelay
strlen
HAL_UART_Transmit
ARM GAS  C:\Users\tomek\AppData\Local\Temp\cczc1GP6.s 			page 18


HAL_UART_Receive
huart6
osSemaphoreCreate
osThreadCreate
